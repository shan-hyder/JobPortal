//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JobPortalMVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCJOBPORTALEntities1 : DbContext
    {
        public MVCJOBPORTALEntities1()
            : base("name=MVCJOBPORTALEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Applystatu> Applystatus { get; set; }
        public virtual DbSet<Employer> Employers { get; set; }
        public virtual DbSet<jobapplication> jobapplications { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<Jobseeker> Jobseekers { get; set; }
        public virtual DbSet<UserLogin1> UserLogin1 { get; set; }
    
        public virtual int add_job(string name, string qual, string experience, string salary, Nullable<int> employerid, string employername, Nullable<System.DateTime> postdate, Nullable<System.DateTime> validuntil)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(string));
    
            var salaryParameter = salary != null ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(string));
    
            var employeridParameter = employerid.HasValue ?
                new ObjectParameter("employerid", employerid) :
                new ObjectParameter("employerid", typeof(int));
    
            var employernameParameter = employername != null ?
                new ObjectParameter("employername", employername) :
                new ObjectParameter("employername", typeof(string));
    
            var postdateParameter = postdate.HasValue ?
                new ObjectParameter("postdate", postdate) :
                new ObjectParameter("postdate", typeof(System.DateTime));
    
            var validuntilParameter = validuntil.HasValue ?
                new ObjectParameter("validuntil", validuntil) :
                new ObjectParameter("validuntil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_job", nameParameter, qualParameter, experienceParameter, salaryParameter, employeridParameter, employernameParameter, postdateParameter, validuntilParameter);
        }
    
        public virtual int confirm_job(Nullable<int> jobseekerid, string status, string jobname)
        {
            var jobseekeridParameter = jobseekerid.HasValue ?
                new ObjectParameter("jobseekerid", jobseekerid) :
                new ObjectParameter("jobseekerid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var jobnameParameter = jobname != null ?
                new ObjectParameter("jobname", jobname) :
                new ObjectParameter("jobname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("confirm_job", jobseekeridParameter, statusParameter, jobnameParameter);
        }
    
        public virtual ObjectResult<get_application_Result> get_application(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_application_Result>("get_application", empidParameter);
        }
    
        public virtual ObjectResult<get_jobs_Result> get_jobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_jobs_Result>("get_jobs");
        }
    
        public virtual int get_maxlogin(ObjectParameter max_id)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_maxlogin", max_id);
        }
    
        public virtual int get_user(string uname, string pasw, ObjectParameter type)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var paswParameter = pasw != null ?
                new ObjectParameter("pasw", pasw) :
                new ObjectParameter("pasw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_user", unameParameter, paswParameter, type);
        }
    
        public virtual int insert_jobapplication(Nullable<int> employerid, Nullable<int> jobseekerid, string jobname, string jobseekername, string jobseekerphone, string resume, string jobseekeremail, string status)
        {
            var employeridParameter = employerid.HasValue ?
                new ObjectParameter("employerid", employerid) :
                new ObjectParameter("employerid", typeof(int));
    
            var jobseekeridParameter = jobseekerid.HasValue ?
                new ObjectParameter("jobseekerid", jobseekerid) :
                new ObjectParameter("jobseekerid", typeof(int));
    
            var jobnameParameter = jobname != null ?
                new ObjectParameter("jobname", jobname) :
                new ObjectParameter("jobname", typeof(string));
    
            var jobseekernameParameter = jobseekername != null ?
                new ObjectParameter("jobseekername", jobseekername) :
                new ObjectParameter("jobseekername", typeof(string));
    
            var jobseekerphoneParameter = jobseekerphone != null ?
                new ObjectParameter("jobseekerphone", jobseekerphone) :
                new ObjectParameter("jobseekerphone", typeof(string));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var jobseekeremailParameter = jobseekeremail != null ?
                new ObjectParameter("jobseekeremail", jobseekeremail) :
                new ObjectParameter("jobseekeremail", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_jobapplication", employeridParameter, jobseekeridParameter, jobnameParameter, jobseekernameParameter, jobseekerphoneParameter, resumeParameter, jobseekeremailParameter, statusParameter);
        }
    
        public virtual int insert_login(Nullable<int> regid, string type, string username, string password)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_login", regidParameter, typeParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int login_check(string uname, string pasw, ObjectParameter msg)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var paswParameter = pasw != null ?
                new ObjectParameter("pasw", pasw) :
                new ObjectParameter("pasw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("login_check", unameParameter, paswParameter, msg);
        }
    
        public virtual int register_employer(Nullable<int> id, string name, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("register_employer", idParameter, nameParameter, emailParameter);
        }
    
        public virtual int register_jobseeker(Nullable<int> id, string name, Nullable<int> age, string qual, string phone, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("register_jobseeker", idParameter, nameParameter, ageParameter, qualParameter, phoneParameter, emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USERID(string uname, string pasw, ObjectParameter type)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var paswParameter = pasw != null ?
                new ObjectParameter("pasw", pasw) :
                new ObjectParameter("pasw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USERID", unameParameter, paswParameter, type);
        }
    
        public virtual ObjectResult<Nullable<int>> get_empid(string uname, string pswd, ObjectParameter id)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var pswdParameter = pswd != null ?
                new ObjectParameter("pswd", pswd) :
                new ObjectParameter("pswd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_empid", unameParameter, pswdParameter, id);
        }
    
        public virtual int get_empname(string uname, string pswd, ObjectParameter name)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var pswdParameter = pswd != null ?
                new ObjectParameter("pswd", pswd) :
                new ObjectParameter("pswd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_empname", unameParameter, pswdParameter, name);
        }
    
        public virtual int updatestatus(Nullable<int> empid, Nullable<int> jobsid, string status)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var jobsidParameter = jobsid.HasValue ?
                new ObjectParameter("jobsid", jobsid) :
                new ObjectParameter("jobsid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatestatus", empidParameter, jobsidParameter, statusParameter);
        }
    }
}
